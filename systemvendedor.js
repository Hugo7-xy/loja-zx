
import { auth, firestore, storage } from './app.js';
let currentSeller = null; let listenersAttached = false;
function setupDashboardTabs() {const menuItems = document.querySelectorAll('.dashboard-menu-item'); const panels = document.querySelectorAll('.dashboard-panel'); menuItems.forEach(item => { item.addEventListener('click', () => { menuItems.forEach(btn => btn.classList.remove('active')); item.classList.add('active'); const targetId = item.dataset.target; panels.forEach(panel => panel.classList.add('hidden')); const targetPanel = document.getElementById(targetId); if (targetPanel) { targetPanel.classList.remove('hidden'); } }); });}
export function renderSellerProducts(sellerUid, isAdminView = false) { const vendorProductList = document.getElementById('vendor-product-list'); if (!vendorProductList) return; vendorProductList.innerHTML = `<p>Carregando produtos...</p>`; firestore.collection('produtos').where('vendedor_uid', '==', sellerUid).onSnapshot(snapshot => { if (snapshot.empty) { vendorProductList.innerHTML = `<p>${isAdminView ? 'Este vendedor' : 'Você'} ainda não adicionou nenhum produto.</p>`; return; } let productsHTML = ''; snapshot.forEach(doc => { const product = doc.data(); productsHTML += `<div class="vendor-product-item"><p>${product.titulo} - R$ ${product.preco}</p><div class="actions"><button class="action-btn edit-btn" data-id="${doc.id}">Editar</button><button class="action-btn delete-btn" data-id="${doc.id}">Excluir</button></div></div>`; }); vendorProductList.innerHTML = productsHTML; }, error => { console.error("Erro ao carregar produtos:", error); });}
async function openEditModalForProduct(productId) { const editProductModal = document.getElementById('edit-product-modal'); try { const doc = await firestore.collection('produtos').doc(productId).get(); if (!doc.exists) { return; } const product = doc.data(); document.getElementById('edit-product-id').value = productId; document.getElementById('edit-product-title').value = product.titulo; document.getElementById('edit-product-desc').value = product.descricao; document.getElementById('edit-product-price').value = product.preco; document.getElementById('edit-product-video').value = product.link_video_youtube; editProductModal.classList.remove('hidden'); } catch (error) { console.error("Erro ao buscar produto para edição:", error); }}
function setupDashboardEventListeners() { setupDashboardTabs(); const addProductBtn = document.querySelector('.dashboard-btn.add-btn'); const editProfileBtn = document.getElementById('edit-profile-btn'); const addProductModal = document.getElementById('add-product-modal'); const editProductModal = document.getElementById('edit-product-modal'); const settingsModal = document.getElementById('settings-modal'); const closeAddModalBtn = addProductModal.querySelector('.close-btn-product'); const closeEditModalBtn = editProductModal.querySelector('.close-btn-edit'); const closeSettingsBtn = settingsModal.querySelector('.close-btn-settings'); const addProductForm = document.getElementById('add-product-form'); const editProductForm = document.getElementById('edit-product-form'); const settingsForm = document.getElementById('settings-form'); const vendorProductList = document.getElementById('vendor-product-list'); const addReferenceForm = document.getElementById('add-reference-form'); const refImageInput = document.getElementById('ref-image'); const fileNameDisplay = document.getElementById('file-name-display'); addProductBtn.addEventListener('click', () => addProductModal.classList.remove('hidden')); closeAddModalBtn.addEventListener('click', () => addProductModal.classList.add('hidden')); editProfileBtn.addEventListener('click', () => { if (!currentSeller) return; document.getElementById('vendor-name').value = currentSeller.name || ''; document.getElementById('vendor-whatsapp').value = currentSeller.whatsapp || ''; document.getElementById('vendor-instagram').value = currentSeller.instagram || ''; settingsModal.classList.remove('hidden'); }); closeSettingsBtn.addEventListener('click', () => settingsModal.classList.add('hidden')); closeEditModalBtn.addEventListener('click', () => editProductModal.classList.add('hidden')); addProductForm.addEventListener('submit', async (e) => { e.preventDefault(); const newProduct = { titulo: document.getElementById('product-title').value, descricao: document.getElementById('product-desc').value, preco: document.getElementById('product-price').value, link_video_youtube: document.getElementById('product-video').value, vendedor_uid: auth.currentUser.uid, fornecedor: currentSeller.name, telefone_vendedor: currentSeller.whatsapp, disponivel: true, data_criacao: firebase.firestore.FieldValue.serverTimestamp() }; try { await firestore.collection('produtos').add(newProduct); addProductForm.reset(); addProductModal.classList.add('hidden'); } catch (error) { alert('Falha ao adicionar produto.'); } }); editProductForm.addEventListener('submit', async (e) => { e.preventDefault(); const productId = document.getElementById('edit-product-id').value; const updatedData = { titulo: document.getElementById('edit-product-title').value, descricao: document.getElementById('edit-product-desc').value, preco: document.getElementById('edit-product-price').value, link_video_youtube: document.getElementById('edit-product-video').value, }; try { await firestore.collection('produtos').doc(productId).update(updatedData); editProductForm.reset(); editProductModal.classList.add('hidden'); } catch(error) { alert('Falha ao atualizar produto.'); } }); settingsForm.addEventListener('submit', async (e) => { e.preventDefault(); const uid = auth.currentUser.uid; if (!uid) return; const updatedProfile = { name: document.getElementById('vendor-name').value, whatsapp: document.getElementById('vendor-whatsapp').value, instagram: document.getElementById('vendor-instagram').value }; try { await firestore.collection('sellers').doc(uid).update(updatedProfile); currentSeller = { ...currentSeller, ...updatedProfile }; settingsModal.classList.add('hidden'); alert("Perfil atualizado com sucesso!"); } catch (error) { alert("Falha ao atualizar o perfil."); } }); vendorProductList.addEventListener('click', (e) => { const target = e.target; const productId = target.dataset.id; if (!productId) return; if (target.classList.contains('edit-btn')) { openEditModalForProduct(productId); } if (target.classList.contains('delete-btn')) { if (confirm("Tem certeza que deseja excluir este produto?")) { firestore.collection('produtos').doc(productId).delete(); } } }); refImageInput.addEventListener('change', (event) => { if (event.target.files && event.target.files.length > 0) { fileNameDisplay.textContent = event.target.files[0].name; } else { fileNameDisplay.textContent = 'Nenhum arquivo selecionado'; } }); addReferenceForm.addEventListener('submit', async (event) => { event.preventDefault(); const file = refImageInput.files[0]; const user = auth.currentUser; if (!file || !user) { alert("Por favor, selecione um arquivo."); return; } try { fileNameDisplay.textContent = 'Enviando...'; const filePath = `references/${user.uid}/${Date.now()}-${file.name}`; const fileRef = storage.ref(filePath); const uploadTask = await fileRef.put(file); const downloadURL = await uploadTask.ref.getDownloadURL(); await firestore.collection('references').add({ imageUrl: downloadURL, sellerUid: user.uid, sellerName: currentSeller.name, createdAt: firebase.firestore.FieldValue.serverTimestamp() }); addReferenceForm.reset(); fileNameDisplay.textContent = 'Nenhum arquivo selecionado'; alert('Referência adicionada com sucesso!'); } catch (error) { alert(`Erro: ${error.message}`); } });}
export function initSystemVendedor(user, sellerData, isAdminView) { const productTab = document.querySelector('[data-target="panel-products"]'); const referencesTab = document.querySelector('[data-target="panel-references"]'); const settingsTab = document.querySelector('[data-target="panel-settings"]'); if (!sellerData) { if(productTab) productTab.parentElement.classList.add('hidden'); if(referencesTab) referencesTab.parentElement.classList.add('hidden'); if(settingsTab) settingsTab.parentElement.classList.add('hidden'); return; } if(productTab) productTab.parentElement.classList.remove('hidden'); if(referencesTab) referencesTab.parentElement.classList.remove('hidden'); if(settingsTab) settingsTab.parentElement.classList.remove('hidden'); currentSeller = sellerData; const menuTitle = document.querySelector('.dashboard-menu h4'); if (isAdminView) { menuTitle.textContent = "Painel de Admin"; } else { menuTitle.textContent = "Painel do Vendedor"; } renderSellerProducts(user.uid); if (!listenersAttached) { setupDashboardEventListeners(); listenersAttached = true; }}
